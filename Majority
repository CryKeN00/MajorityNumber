    static void Main(string[] args)
    {
        int lenght = 10000;  //Задаем длинну массива - константу
        Random random = new Random(); // Создаем объект для генерации рандомных чисел
        int[] mass = new int[lenght]; // Создаем массив элементов для проверки наличия мажоритарного числа
        for (int i = 0; i < lenght; i++) { // Перебор элементов массива
            mass[i] = random.Next(0, 101); // Заполняем массив элементами от 1 до 100
        }
        int majority = FindMajorityElement(mass); //Вызываем метод для поиска мажоритарного числа и вписываем его в переменную  majority
        if (majority != -1) // Проверяем соответствует ли элемент параметрам мажоритарного числа и выводим соответствующие сообщения
        {
            Console.WriteLine($"Мажоритарный элемент в данном массиве - {majority}");
        }
        else
        {
            Console.WriteLine("В данном массиве отсутствует мажоритарное число");
        }
    }
    static int FindMajorityElement(int[] nums) //Объявляем метод для поиска мажоритарного числа в параметрах с массивом целочисленных элементов
    {
        int cand = 0; //Задаем переменную для поиска кандидатов
        int count = 0; //Задаем переменную-счетчик, которая будет считывать сколько раз встречается число в массиве
        foreach (var num in nums) //Перебор элементов массива nums
        {
            if (count == 0) //Если счетчик равен нулю присваеваем cand значение элемента, а счетчик при этом увеличивается на единицу
            {
                cand = num;
                count = 1;
            }
            else if (cand == num) //Если попадается элемент равный кандидату счетчик инкрементирует
            {
                count++;
            }
            else //В противном случае дикрементирует
            {
                count--;
            }
        }
        count = 0; //Установка счетчика в 0 значение
        foreach (var num in nums) //Снова перебераем все элементы массива
        {
            if (count == num) //Если попадается элемент равный кандидату счетчик инкрементирует
            {
                count++;
            }
        }
        if (count > nums.Length / 2) //Проверяем больше или меньше половины длины массива число совпадений 
            {
                return count;//Если да, возвращаем count
            }
    else { return -1; } //Если нет, возвращаем -1
        }
    }
}
